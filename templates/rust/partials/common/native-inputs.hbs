
pub fn populate_inputs(mut payload: TransportMap) -> Result<Inputs, TransportError> {
  Ok(Inputs {
    {{#each fields }}
    {{snakeCase name.value}}: payload.consume("{{name.value}}")?,
    {{/each}}
  })
}

#[derive(Debug, Deserialize, Serialize, Default, Clone)]
pub struct Inputs {
{{#each fields }}
  #[serde(rename = "{{name.value}}")]
  pub {{snakeCase name.value}}: {{> expand-type type}},
{{/each}}
}

static INPUTS_LIST: &[(&str, &str)] = &[{{#join fields ","}}("{{name.value}}", "{{codegen-type type}}"){{/join}}];

#[must_use]
pub fn inputs_list() -> &'static [(&'static str, &'static str)] {
    INPUTS_LIST
}
